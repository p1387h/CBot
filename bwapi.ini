[ai]
; Paths and revisions for AI
;   - Use commas to specify AI for multiple instances.
;   - If there are more instances than the amount of 
;         DLLs specified, then the last entry is used.
;   - Example: SomeAI.dll, SecondInstance.dll, ThirdInstance.dll
;   - Absolute paths are acceptable.
;ai     = bwapi-data/AI/Steamhammer/Steamhammer.dll
;ai = bwapi-data/AI/Martin_Rooijackers/LetaBot.dll
;ai = bwapi-data/AI/PurpleWave/PurpleWave.jar
;ai	= bwapi-data/AI/IronBot/Iron.dll
;ai_dbg = bwapi-data/

; Used only for tournaments
; Tournaments can only be run in RELEASE mode
tournament =

[auto_menu]
; auto_menu = OFF | SINGLE_PLAYER | LAN | BATTLE_NET
; for replays, just set the map to the path of the replay file
auto_menu = SINGLE_PLAYER
;auto_menu = LAN 
;auto_menu = OFF

; pause_dbg = ON | OFF
; This specifies if auto_menu will pause until a debugger is attached to the process.
; Only works in DEBUG mode.
pause_dbg = OFF

; lan_mode = Same as the text that appears in the multiplayer connection list
;            Examples: Local Area Network (UDP), Local PC, Direct IP
;lan_mode = Local Area Network (UDP)
lan_mode = Local PC

; auto_restart = ON | OFF
; if ON, BWAPI will automate through the end of match screen and start the next match
; if OFF, BWAPI will pause at the end of match screen until you manually click OK,
; and then BWAPI resume menu automation and start the next match
auto_restart = ON

; map = path to map relative to Starcraft folder, i.e. map = maps/(2)Boxer.scm
; leaving this field blank will join a game instead of creating it
; The filename(NOT the path) can also contain wildcards, example: maps/(?)*.sc?
; A ? is a wildcard for a single character and * is a wildcard for a string of characters
;map = maps/(?)*.sc?
map = maps\sscai\*.sc?
;map = maps\sscai\testmaps\testmap_attackableUnitFly.scm
;map = maps\sscai\testmaps\testmap_tank.scm
;map = maps\sscai\testmaps\testmap_tankSkills.scm
;map = maps\sscai\testmaps\testmap_tankSiegeRangePred.scm
;map = maps\sscai\testmaps\testmap_tankSiegeRangePredG.scm
;map = maps\sscai\testmaps\testmap_vulture.scm
;map = maps\sscai\testmaps\testmap_vultureSpiderMines.scm
;map = maps\sscai\testmaps\testmap_vultureSpiderMinesG.scm
;map = maps\sscai\testmaps\testmap_vultureEvadeNarrow.scm
;map = maps\sscai\testmaps\testmap_marineRetrEndpos.scm
;map = maps\sscai\testmaps\testmap_marineEvade.scm
;map = maps\sscai\testmaps\testmap_marineEvadeNarrow.scm
;map = maps\sscai\testmaps\testmap_marineEvadeBorder.scm
;map = maps\sscai\testmaps\testmap_marineEvadeBorderL.scm
;map = maps\sscai\testmaps\testmapBuildings.scm
;map = maps\sscai\testmaps\testmapWorkerMoveCenter.scm
;map = maps\sscai\testmaps\testmapWorkerRepair.scm
;map = maps\sscai\testmaps\testmapWorkerRepairG.scm
;map = maps\sscai\testmaps\testmapWorkerMineralEmpty.scm
;map = maps\sscai\testmaps\testmapWorkerAttackSingle.scm
;map = maps\sscai\testmaps\testmap_marinesFightEvade.scm
;map = maps\sscai\testmaps\testmap_marinesFightSkills.scm
;map = maps\sscai\testmaps\testmap_marinesFightMedics.scx
;map = maps\sscai\testmaps\testmap_marinesPhotonCannon.scx
;map = maps\sscai\testmaps\testmap_marinesSVessels.scx
;map = maps\sscai\testmaps\testmap_firebatFightSkills.scm
;map = maps\sscai\testmaps\testmap_medicReturnToBase.scx
;map = maps\sscai\testmaps\testmap_medicsMarinesSkills.scx
;map = maps\sscai\testmaps\testmap_medicsMarinesGroup.scx
;map = maps\sscai\testmaps\testmap_medicsMarinesGroup2.scx
;map = maps\sscai\testmaps\testmap_medicsMarinesMoveTo.scx
;map = maps\sscai\testmaps\testmap_medicsMarinesEvade.scx
;map = maps\sscai\testmaps\testmap_wraithBasic.scm
;map = maps\sscai\testmaps\testmap_wraithCloak.scm
;map = maps\sscai\testmaps\testmap_wraithCloakD.scm
;map = maps\sscai\testmaps\testmap_goliath.scm
;map = maps\sscai\testmaps\testmap_medicsMarinesSVs.scx
;map = maps\sscai\testmaps\testmap_lurkerConfidence.scx
;map = maps\sscai\testmaps\testmap_SVesselsMarineSkill.scx

;map = maps\sscai\(4)Jade.scx
;map = maps\sscai\(4)Circuit Breaker.scx
;map = maps\sscai\(3)Tau Cross.scx
;map = maps\sscai\(4)La Mancha1.1.scx
;map = maps\sscai\(4)Electric Circuit.scx
;map = maps\sscai\(2)Destination.scx
;map = maps\sscai\(2)Heartbreak Ridge.scx
;map = maps\sscai\(3)Neo Moon Glaive.scx
;map = maps\sscai\(4)Fighting Spirit.scx
;map = maps\sscai\(4)Icarus.scm
;map = maps\sscai\(4)Roadrunner.scx
;map = maps\sscai\(2)Benzene.scx
;map = maps\sscai\(4)Andromeda.scx
;map = maps\sscai\(4)Python.scx
;map = maps\sscai\(4)Empire of the Sun.scm




; game = name of the game to join
;	i.e., game = BWAPI
;	will join the game called "BWAPI"
;	If the game does not exist and the "map" entry is not blank, then the game will be created instead
;	If this entry is blank, then it will follow the rules of the "map" entry
;game = CBot

; mapiteration =  RANDOM | SEQUENCE
; type of iteration that will be done on a map name with a wildcard
mapiteration = RANDOM

; race = Terran | Protoss | Zerg | Random
race = Terran 

; enemy_count = 1-7, for 1v1 games, set enemy_count = 1
; only used in single player games
enemy_count = 1

; enemy_race = Terran | Protoss | Zerg | Random | RandomTP | RandomTZ | RandomPZ | RandomTPZ
; only used in single player games
enemy_race = Random

; enemy_race_# = Default
; Values for enemy_race are acceptable, Default will use the value specified in enemy_race
enemy_race_1 = Default
enemy_race_2 = Default
enemy_race_3 = Default
enemy_race_4 = Default
enemy_race_5 = Default
enemy_race_6 = Default
enemy_race_7 = Default

;game_type = TOP_VS_BOTTOM | MELEE | FREE_FOR_ALL | ONE_ON_ONE | USE_MAP_SETTINGS | CAPTURE_THE_FLAG
;           | GREED | SLAUGHTER | SUDDEN_DEATH | TEAM_MELEE | TEAM_FREE_FOR_ALL | TEAM_CAPTURE_THE_FLAG
game_type = MELEE
;game_type = USE_MAP_SETTINGS

; save_replay = path to save replay to
; Accepts all environment variables including custom variables. See wiki for more info.
save_replay = maps/replays/%BOTNAME6%/$Y $b $d/%MAP%_%BOTRACE%%ALLYRACES%vs%ENEMYRACES%_$H$M$S.rep

; wait_for_min_players = #
; # of players to wait for in a network game before starting.
; This includes the BWAPI player. The game will start immediately when it is full.
wait_for_min_players = 2

; wait_for_max_players = #
; Start immediately when the game has reached # players.
; This includes the BWAPI player. The game will start immediately when it is full.
wait_for_max_players = 8

; wait_for_time = #
; The time in milliseconds (ms) to wait after the game has met the min_players requirement.
; The game will start immediately when it is full.
wait_for_time = 60000

[config]
; holiday = ON | OFF
; This will apply special easter eggs to the game when it comes time for a holiday.
holiday = ON

; shared_memory = ON | OFF
; This is specifically used to disable shared memory (BWAPI Server) in the Windows Emulator "WINE"
; Setting this to OFF will disable the BWAPI Server, default is ON
shared_memory = ON

[window]
; These values are saved automatically when you move, resize, or toggle windowed mode

; windowed = ON | OFF
; This causes BWAPI to enter windowed mode when it is injected.
windowed = OFF

; left, top
; Determines the position of the window
left = 0
top  = 0

; width, height
; Determines the width and height of the client area and not the window itself
width  = 640
height = 480

[starcraft]
; Game sound engine = ON | OFF
sound = OFF

; Screenshot format = gif | pcx | tga | bmp
screenshots = gif

; Random seed override. This uses a fixed seed at the start of the game so that if played out the exact same way,
; the same occurrences will happen every time. This value must be a decimal integer.
;
; When this key is commented out, Starcraft will use the system time as a seed. This is the default behaviour.
;
; Note: This option affects both single AND multi-player modes (for game hosts only). This means that hosting a multi-player
; game with this option enabled will distribute this fixed seed to all other players in the game.
;seed_override = 123456789

; Speed override. This overrides the default game speed setting and prevents bots from changing the game speed.
; Enabling this option causes it to take effect. The value is the number of milliseconds per frame. A negative
; value uses the game's default speed value.
;speed_override = -1

; drop_players = ON | OFF
; This specifies if BWAPI should drop other players from the game when the timeout dialog reaches 0. Players 
; usually time out when there are connection issues or their client is not responding. Setting this to OFF
; will cause BWAPI to wait an infinite amount of time until the player reconnects.
drop_players = ON
